name: 'CodeQL Composite Action'
description: 'Composite action handling all elements of CodeQL scanning'
inputs:
  language:
    description: 'Language or set of languages to scan for using CodeQL'
    required: true
  JIRA_BASE_URL:
    descripption: 'Organization Jira tenant url'
    required: true
  JIRA_USER_EMAIL:
    description: 'Email of user creating Jira Issue'
    required: true
  JIRA_API_TOKEN:
    description: 'API token authorizing Jira API connection'
    required: true
  JIRA_PROJECT_NAME:
    description: 'Project in which issue is to be created'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout caller repository
      uses: actions/checkout@v3

    - name: Test Composite Actions
      shell: bash
      run: |
        echo "Testing Composite action"
        pwd
        ls -a
        echo ${{ inputs.language }}

    # Initializes the CodeQL tools for scanning [test].
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ inputs.language }}
        queries: security-and-quality
        #config-file: ./.github/codeql/codeql-config.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{ inputs.language }}"

    - name: Checkout composite repository
      uses: actions/checkout@v3
      with: 
        repository: 'github-actions-course-nxbster/codeql-action'
        ref: 'main'
        path: 'codeql-action'


    - name: Create Jira Issues
      id: python
      shell: bash
      run: |
        pip install sarif-tools
        pip install jira
        python codeql-action/parse-sarif.py
      env:
        JIRA_BASE_URL: ${{ inputs.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ inputs.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ inputs.JIRA_API_TOKEN }}
        JIRA_PROJECT_NAME: ${{ inputs.JIRA_PROJECT_NAME }}
    
    - name: Review Scan Results
      shell: bash
      run: |
        echo "Scan identified ${{ steps.python.outputs.vulnerability_count }}"
        echo "${{ steps.python.outputs.issues_created }} new jira issues created"